{"ast":null,"code":"import Employee from \"@/models/Employee\";\nimport \"@/utils/dbConnect\";\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const employee = await Employee.findById(id);\n        return res.status(200).json({\n          success: true,\n          data: employee\n        });\n      } catch (error) {\n        return res.status(404).json({\n          success: false\n        });\n      }\n\n    case \"PUT\":\n      try {\n        const employee = await Employee.findByIdAndUpdate(id, req.body, {\n          new: true,\n          runValidators: true\n        });\n        return res.status(200).json({\n          success: true,\n          data: employee\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false\n        });\n      }\n\n    case \"DELETE\":\n      try {\n        await Employee.deleteOne({\n          _id: id\n        });\n        return res.status(200).json({\n          success: true,\n          data: {\n            id\n          }\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false\n        });\n      }\n\n    default:\n      res.setHeaders(\"Allow\", [\"GET\", \"PUT\", \"DELETE\"]);\n      return res.status(405).json({\n        success: false\n      }).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["/home/globalia/Downloads/next-crud-master/pages/api/employees/[id].js"],"names":["Employee","req","res","query","id","method","employee","findById","status","json","success","data","error","findByIdAndUpdate","body","new","runValidators","deleteOne","_id","setHeaders","end"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAO,mBAAP;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AACLC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADF;AAELC,IAAAA;AAFK,MAGFJ,GAHJ;;AAKA,UAAQI,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,QAAT,CAAkBH,EAAlB,CAAvB;AAEA,eAAOF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,UAAAA,OAAO,EAAE,IADkB;AAE3BC,UAAAA,IAAI,EAAEL;AAFqB,SAArB,CAAP;AAIA,OAPD,CAOE,OAAOM,KAAP,EAAc;AACf,eAAOV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,UAAAA,OAAO,EAAE;AADkB,SAArB,CAAP;AAGA;;AACF,SAAK,KAAL;AACC,UAAI;AACH,cAAMJ,QAAQ,GAAG,MAAMN,QAAQ,CAACa,iBAAT,CAA2BT,EAA3B,EAA+BH,GAAG,CAACa,IAAnC,EAAyC;AAC/DC,UAAAA,GAAG,EAAE,IAD0D;AAE/DC,UAAAA,aAAa,EAAE;AAFgD,SAAzC,CAAvB;AAKA,eAAOd,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,UAAAA,OAAO,EAAE,IADkB;AAE3BC,UAAAA,IAAI,EAAEL;AAFqB,SAArB,CAAP;AAIA,OAVD,CAUE,OAAOM,KAAP,EAAc;AACf,eAAOV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,UAAAA,OAAO,EAAE;AADkB,SAArB,CAAP;AAGA;;AACF,SAAK,QAAL;AACC,UAAI;AACH,cAAMV,QAAQ,CAACiB,SAAT,CAAmB;AAAEC,UAAAA,GAAG,EAAEd;AAAP,SAAnB,CAAN;AAEA,eAAOF,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,UAAAA,OAAO,EAAE,IADkB;AAE3BC,UAAAA,IAAI,EAAE;AAAEP,YAAAA;AAAF;AAFqB,SAArB,CAAP;AAIA,OAPD,CAOE,OAAOQ,KAAP,EAAc;AACf,eAAOV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,UAAAA,OAAO,EAAE;AADkB,SAArB,CAAP;AAGA;;AACF;AACCR,MAAAA,GAAG,CAACiB,UAAJ,CAAe,OAAf,EAAwB,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,CAAxB;AACA,aAAOjB,GAAG,CACRM,MADK,CACE,GADF,EAELC,IAFK,CAEA;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFA,EAGLU,GAHK,CAGA,UAASf,MAAO,cAHhB,CAAP;AA7CF;AAkDA,CAxDD","sourcesContent":["import Employee from \"@/models/Employee\";\nimport \"@/utils/dbConnect\";\n\nexport default async (req, res) => {\n\tconst {\n\t\tquery: { id },\n\t\tmethod,\n\t} = req;\n\n\tswitch (method) {\n\t\tcase \"GET\":\n\t\t\ttry {\n\t\t\t\tconst employee = await Employee.findById(id);\n\n\t\t\t\treturn res.status(200).json({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tdata: employee,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treturn res.status(404).json({\n\t\t\t\t\tsuccess: false,\n\t\t\t\t});\n\t\t\t}\n\t\tcase \"PUT\":\n\t\t\ttry {\n\t\t\t\tconst employee = await Employee.findByIdAndUpdate(id, req.body, {\n\t\t\t\t\tnew: true,\n\t\t\t\t\trunValidators: true,\n\t\t\t\t});\n\n\t\t\t\treturn res.status(200).json({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tdata: employee,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treturn res.status(400).json({\n\t\t\t\t\tsuccess: false,\n\t\t\t\t});\n\t\t\t}\n\t\tcase \"DELETE\":\n\t\t\ttry {\n\t\t\t\tawait Employee.deleteOne({ _id: id });\n\n\t\t\t\treturn res.status(200).json({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tdata: { id },\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treturn res.status(400).json({\n\t\t\t\t\tsuccess: false,\n\t\t\t\t});\n\t\t\t}\n\t\tdefault:\n\t\t\tres.setHeaders(\"Allow\", [\"GET\", \"PUT\", \"DELETE\"]);\n\t\t\treturn res\n\t\t\t\t.status(405)\n\t\t\t\t.json({ success: false })\n\t\t\t\t.end(`Method ${method} Not Allowed`);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}