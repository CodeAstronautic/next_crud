{"ast":null,"code":"import mongoose from \"mongoose\";\nconst connection = {};\n\n(async function dbConnect() {\n  if (connection.isConnected) {\n    return;\n  }\n\n  try {\n    const db = await mongoose.connect(\"mongodb+srv://invoiceSystem:RDvpIqwT4wAjqlMa@pm.1tahh.mongodb.net/crud_next?retryWrites=true&w=majority\", {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false\n    });\n    connection.isConnected = db.connections[0].readyState;\n    console.log(\"MongoDB Connected\");\n  } catch (error) {\n    console.log(error);\n  }\n})();","map":{"version":3,"sources":["/home/globalia/Downloads/next-crud-master/utils/dbConnect.js"],"names":["mongoose","connection","dbConnect","isConnected","db","connect","useNewUrlParser","useUnifiedTopology","useCreateIndex","useFindAndModify","connections","readyState","console","log","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,UAAU,GAAG,EAAnB;;AAEA,CAAC,eAAeC,SAAf,GAA2B;AAC3B,MAAID,UAAU,CAACE,WAAf,EAA4B;AAC3B;AACA;;AAED,MAAI;AACH,UAAMC,EAAE,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB,yGAAjB,EAA4H;AAC5IC,MAAAA,eAAe,EAAE,IAD2H;AAE5IC,MAAAA,kBAAkB,EAAE,IAFwH;AAG5IC,MAAAA,cAAc,EAAE,IAH4H;AAI5IC,MAAAA,gBAAgB,EAAE;AAJ0H,KAA5H,CAAjB;AAOAR,IAAAA,UAAU,CAACE,WAAX,GAAyBC,EAAE,CAACM,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,GAXD,CAWE,OAAOC,KAAP,EAAc;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACD,CAnBD","sourcesContent":["import mongoose from \"mongoose\";\n\nconst connection = {};\n\n(async function dbConnect() {\n\tif (connection.isConnected) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst db = await mongoose.connect(\"mongodb+srv://invoiceSystem:RDvpIqwT4wAjqlMa@pm.1tahh.mongodb.net/crud_next?retryWrites=true&w=majority\", {\n\t\t\tuseNewUrlParser: true,\n\t\t\tuseUnifiedTopology: true,\n\t\t\tuseCreateIndex: true,\n\t\t\tuseFindAndModify: false,\n\t\t});\n\n\t\tconnection.isConnected = db.connections[0].readyState;\n\n\t\tconsole.log(\"MongoDB Connected\");\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n})();\n"]},"metadata":{},"sourceType":"module"}